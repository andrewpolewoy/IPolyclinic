#version: '2'
#
#services:
#  app:
#    container_name: ipolyclinic
#    image: 'docker-spring-boot-postgres:latest'
#    build:
#      context: .
#    depends_on:
#      - db
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/edu
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=-postgres
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#
#  db:
#    container_name: postgres
#    image: 'postgres:13.1-alpine'
#    restart: always
#    ports:
#      - 5432:5432
#    environment:
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#      - POSTGRES_DB=edu

#version: '3'
#
#services:
#  db:
#    container_name: postgres
#    image: postgres:13.1-alpine
#    build:
#      context: .
#      dockerfile: db.Dockerfile
#    volumes:
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./postgres-data:/var/lib/postgresql/data
##      - ./var/pgdata:/var/lib/postgresql/data
#    restart: always
#    ports:
#      - "5433:5432"
#    environment:
#      PGDATA: /var/lib/postgresql/data
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: polyclinic
#
#  app:
#    container_name: ipolyclinic
#    image: docker-spring-boot-ipolyclinic:1.0
#    build:
#      context: .
##      context: ./docker
#      dockerfile: Dockerfile
##    volumes:
##      - ./src/main/webapp:/var/lib/postgresql/data
#    depends_on:
#      - db
#    ports:
#      - "8088:8080"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5433/polyclinic
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
##      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#      SPRING_JPA_HIBERNATE_DDL_AUTO: create
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: polyclinic
#
#volumes:
#  postgres-data:

#  ----------------------------------rajeshsgr--------------------------------------
version: '3.1'
services:
  db:
    container_name: postgres
    image: postgres:13.1-alpine
    networks:
      - order-pgsql
#    build:
#      context: .
#      dockerfile: db.Dockerfile
    ports:
      - "5432:5432"
    volumes:
#      - docker-pg-vol
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #      - ./var/pgdata:/var/lib/postgresql/data
    restart: always

    environment:
#      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: polyclinic

  app:
    container_name: ipolyclinic
    image: docker-spring-boot-ipolyclinic:1.0
    networks:
      - order-pgsql
    build:
      context: .
      #      context: ./docker
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    #    volumes:
    #      - ./src/main/webapp:/var/lib/postgresql/data
    depends_on:
      - db
    restart: on-failure

    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/polyclinic
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: polyclinic
networks:
  order-pgsql:
#  ----------------------------------rajeshsgr--------------------------------------

